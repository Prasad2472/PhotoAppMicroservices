server.port=${PORT:0}
spring.application.name=users-ws
eureka.client.service-url.defaultZone=http://localhost:8010/eureka
#If want to start multiple instances, 
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

#We can able to access postgres tables via H2-Console as well
spring.h2.console.enabled=true
spring.h2.console.settings.web-allow-others=true

token.expriration_time=3600000
token.secret= deK0CReXgGUuW2FHklNs1OgLM1ksqwMw9vnwW9gp9ALVggsonCJiZeDbXxmw2P0R
login.url.path=/users/login


management.endpoints.web.exposure.include=*



#File system Configuration
spring.profiles.active=native
spring.config.import=optional:configserver:http://localhost:8888/ConfigServer

#Git backend configuration
#spring.cloud.config.label=main
#spring.profiles.active=git
#spring.config.import=optional:configserver:https://github.com/Prasad2472/PhotoAppConfiguration

#MQ Server Currently not working since unable to open url
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

#Feign Logger
logging.level.com.photoapp.api.users.data.AlbumsServiceClient=DEBUG

#Resilence4j
management.endpoint.health.enabled=true
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

#To Configire the order
resilience4j.circuitbreaker.circuit-breaker-aspect-order=1
#albums-ws must be match in CircuitBreaker annotation name
resilience4j.circuitbreaker.instances.albums-ws.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.albums-ws.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.albums-ws.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.albums-ws.sliding-window-type=count-based
resilience4j.circuitbreaker.instances.albums-ws.sliding-window-size=2
resilience4j.circuitbreaker.instances.albums-ws.minimum-number-of-calls=1
resilience4j.circuitbreaker.instances.albums-ws.event-consumer-buffer-size=10

resilience4j.retry.retry-aspect-order=2
#It will wait 2seconds before re try
resilience4j.retry.instances.albums-ws.wait-duration=2s
resilience4j.retry.instances.albums-ws.enable-exponential-backoff=true
#if first attempts fails then it will wait 2 * 5 = 10 secods for next attempt
resilience4j.retry.instances.albums-ws.exponential-backoff-multiplier=5


#Zipkin Which request to trace 1 is Full trace
management.tracing.sampling.probability=1
logging.pattern.level= %5p [${spring.application.name}, %X{traceId:-}, %X{spanId:-}]
logging.level.com.photoapp.api.users.service.UsersServiceImpl=DEBUG

#Logging
logging.file.path=E:\\Micoservices\\LogFileLocation
logging.file.name=${logging.file.path}\\users-ws.log


